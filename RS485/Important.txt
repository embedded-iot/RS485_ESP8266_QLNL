USART0 initialization
Communication Parameters: 8 Data, 1 Stop, No Parity
USART0 Receiver: On
USART0 Transmitter: On
USART0 Mode: Asynchronous
USART0 Baud Rate: 9600


/////
//===================================================
 unsigned char bydata; // counter variable
 unsigned char sData[8]; // outgoing buffer from MASTER to SLAVES

signed int CRC16( int iLeng)
{
     signed int CRCLo,CRCHi;
    signed int CL,CH;
     signed int SHi,SLo;
    int i,Flag;

    CRCLo = 0xff;
    CRCHi = 0xff;
    CL = 0x01; CH = 0xa0;
    for(i=0; i<iLeng; i++)
    {  CRCLo = CRCLo ^ sData[i];
        for( Flag=0; Flag<=7; Flag++)
        {
            SHi = CRCHi;
            SLo = CRCLo;
            CRCHi = CRCHi>>1;
            CRCLo = CRCLo>>1;
            if((SHi&0x01) == 0x01)
            CRCLo = CRCLo|0x80;
            if((SLo&0x01) == 0x01)
            {
                CRCHi = CRCHi ^ CH;
                CRCLo = CRCLo ^ CL;
                } } }
    return(CRCHi<<8 | CRCLo);
}

void tx_485()
{
  signed int  crcData;

       sData[0] = 0x03; // SLAVE  address
       sData[1] = 0x04; //ma ham
       sData[2] = 0x00; //
       sData[3] = 0x01; // 2 byte dia chi
       sData[4] = 0x00; //
       sData[5] = 0x3b; // 2 byte so thanh ghi can doc het lï¿½ 0x3b

      crcData = CRC16(6);
      sData[6] = crcData & 0xff;
      sData[7] = crcData >> 8;

      PORTE.2=1; // enable RS-485 tx
      for (bydata = 0; bydata < 8 ; bydata++)
        {
        putchar(sData[bydata]); // Send slaves
        delay_ms(1);
        }
      PORTE.2=0;
      delay_ms(600);//impotant
      PORTE.2=1;
 }

 //======================================================
 //chuong trinh chuyen so lieu
 void twobyte2real(unsigned char byte1,unsigned char byte2)
 {
 unsigned char sign;

 if (byte1>127)
     {
     sign=1;
     byte1=byte1-128;}

 byte1=2*byte1;

 if (byte2>127)
     {byte1=byte1+1;
     byte2=byte2-128;
     }

 byte2=byte2+128;
 realnum=ldexp(byte2*1./127.7,byte1-127);//returns x * 2^expn.
 if(sign==1)
     {
     realnum = (-1.0)*realnum;
     sign=0;
     }
 }
 //=======================================================
 void cov2real(void)
 {
 //dien ap
 twobyte2real(msg0[3],msg0[4]);
 ftoa(realnum,1,U1);

 twobyte2real(msg0[7],msg0[8]);
 ftoa(realnum,1,U2);

 twobyte2real(msg0[11],msg0[12]);
 ftoa(realnum,1,U3);

 //dong dien
 twobyte2real(msg0[35],msg0[36]);
 ftoa(realnum,3,I1);

 twobyte2real(msg0[39],msg0[40]);
 ftoa(realnum,3,I2);

 twobyte2real(msg0[43],msg0[44]);
 ftoa(realnum,3,I3);

 //cong suat
 twobyte2real(msg0[51],msg0[52]);
 ftoa(realnum*10,3,P1);

 twobyte2real(msg0[55],msg0[56]);
 ftoa(realnum*10,3,P2);

 twobyte2real(msg0[59],msg0[60]);
 ftoa(realnum*10,3,P3);

 //nang luong
 twobyte2real(msg0[119],msg0[120]);
 ftoa(realnum*10+10006.0,2,totalenergy);

 strcpy(status,"thong so");
 strcat(status,"/U1=");
 strncat(status,U1,5);
 strcat(status,"V");

 strcat(status,"/U2=");
 strncat(status,U2,5);
 strcat(status,"V");

 strcat(status,"/U3=");
 strncat(status,U3,5);
 strcat(status,"V");

 strcat(status,"/I1=");
 strncat(status,I1,5);
 strcat(status,"A");

 strcat(status,"/I2=");
 strncat(status,I2,5);
 strcat(status,"A");

 strcat(status,"/I3=");
 strncat(status,I3,5);
 strcat(status,"A");

 strcat(status,"/P1=");
 strncat(status,P1,5);
 strcat(status,"kW");

 strcat(status,"/P2=");
 strncat(status,P2,5);
 strcat(status,"kW");
 strcat(status,"/P3=");
 strncat(status,P3,5);
 strcat(status,"kW");

 strcat(status,"/Energy=");
 strncat(status,totalenergy,8);
 strcat(status,"kWh");
 }
